{
  "openapi": "3.0.0",
  "info": {
    "title": "Crypto Trading API",
    "description": "This is a dummy API for Crypto Trading Project",
    "contact": {
      "email": "aarya.boya@zemosolabs.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/AaryaZemoso/CryptoTrading/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://virtserver.swaggerhub.com/AaryaZemoso/CrytoTrading/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "Watchlist",
      "description": "List of Cryptocurrencies"
    },
    {
      "name": "Users",
      "description": "User info"
    }
  ],
  "paths": {
    "/watchlist/{uid}": {
      "get": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Returns list of Cryptocurrency ID's from User Watchlist",
        "description": "By passing the user_id as a parameter, it lists out all the Cryptocurrency the user has added in his watchlist\n",
        "operationId": "getWatchlist",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of cryptocurrency id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WatchList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User ID Invalid"
          }
        }
      }
    },
    "/watchlist/{uid}/{cid}": {
      "put": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Adds the Cryptocurrency to the User's Watchlist",
        "description": "Passing the user_id and cryptocurrency_id, it will add the respective cryptocurrency to the user's watchlist\n",
        "operationId": "addToWatchlist",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Cryptocurrency ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Added successfully",
            "content": {
              
            }
          },
          "400": {
            "description": "Invalid User ID or Cryptocurrency ID"
          }
        }
      },
      "delete": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Deletes the Cryptocurrency from User's Watchlist",
        "description": "Passing the user_id and cryptocurrency_id, it will remove the respective cryptocurrency from the user's watchlist\n",
        "operationId": "deleteFromWatchlist",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Cryptocurrency ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removed successfully",
            "content": {
              
            }
          },
          "400": {
            "description": "Invalid User ID or Cryptocurrency ID"
          }
        }
      }
    },
    "/portfolio/{uid}": {
      "get": {
        "tags": [
          "portfolio"
        ],
        "summary": "Fetch all bought assets",
        "description": "",
        "operationId": "findAssetListByUserName",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portfolio"
                }
              }
            }
          },
          "400": {
            "description": "User ID Invalid"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns user info based on ID",
        "description": "By passing the userId, it fetches all info like name, email etc.,",
        "operationId": "getUserId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "gets user based on ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "User ID Invalid"
          }
        }
      }
    },
    "/portfolio/{uid}/timeline": {
      "get": {
        "tags": [
          "portfolio"
        ],
        "summary": "get portfolio values by timestamp",
        "description": "",
        "operationId": "getPortfolioValue",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "from",
            "description": "Start Date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "to",
            "description": "End Date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date"
                      },
                      "portfolio": {
                        "$ref": "#/components/schemas/Portfolio"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid User ID"
          }
        }
      }
    },
    "/users/": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates user info",
        "description": "updates user info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Updated successfully",
            "content": {
              
            }
          },
          "400": {
            "description": "Invalid User ID"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add new user info",
        "description": "Add new user info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/idResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WatchList": {
        "required": [
          "list_of_cryptocurrencies"
        ],
        "type": "object",
        "properties": {
          "list_of_cryptocurrencies": {
            "type": "array",
            "example": [
              "BTC",
              "ETH"
            ],
            "items": {
              "type": "string",
              "format": "cryptocurrencies_id"
            }
          }
        }
      },
      "Portfolio": {
        "type": "object",
        "properties": {
          "totalBalance": {
            "type": "number",
            "format": "float64"
          },
          "totalInvestment": {
            "type": "number",
            "format": "float64"
          },
          "portfolioList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "currencyId": {
                  "type": "integer",
                  "format": "int64"
                },
                "holdings": {
                  "type": "number",
                  "format": "float"
                },
                "price": {
                  "type": "number",
                  "format": "float"
                },
                "gains": {
                  "type": "number",
                  "format": "float"
                }
              }
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "picture": {
                  "type": "string"
                }
              }
            },
            "idResponse": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
